<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.avalon.ms.dao.mybatis.mapper.StudentMapper">
	<!-- <cache eviction="LRU" flushInterval="100000" size="1024" readOnly="true" /> -->
	<!-- <cache type="com.avalon.ms.dao.mybatis.cache.MCache"/> -->
  <resultMap id="BaseResultMap" type="Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 09 11:12:58 CST 2017.
    -->
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="student_no" jdbcType="VARCHAR" property="studentNo"  />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex"  property="sex" typeHandler="com.avalon.ms.dao.mybatis.typeHandler.SexTypeHandler"/>
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <collection property="studentCourseGradeList" column="student_no" select="com.avalon.ms.dao.mybatis.mapper.CoursegradeMapper.selectByStudentNo" fetchType="lazy"></collection>
 	<!-- <discriminator javaType="String" column="sex">
 		<case value="1" resultMap="maleStudentMap"/>
 		<case value="2" resultMap="femaleStudentMap"/>
 	</discriminator> -->	
  </resultMap>
  
  <resultMap type="com.avalon.ms.dao.entity.Student" id="maleStudentMap" extends="BaseResultMap">
  	<!-- 定义male特有的属性或操作 -->
  </resultMap>
  <resultMap type="com.avalon.ms.dao.entity.Student" id="femaleStudentMap" extends="BaseResultMap">
  	<!-- 定义male特有的属性或操作 -->
  </resultMap>
  
  <insert id="insert" parameterType="com.avalon.ms.dao.entity.Student">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 09 11:12:58 CST 2017.
    -->
    insert into student (id, student_no, name, 
      sex, remark)
    values (#{id,jdbcType=INTEGER}, #{studentNo,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,typeHandler=com.avalon.ms.dao.mybatis.typeHandler.SexTypeHandler}, #{remark,jdbcType=VARCHAR})
  </insert>
  <select id="selectAll" resultMap="BaseResultMap" >
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Oct 09 11:12:58 CST 2017.
    -->
    select id, student_no, name, sex, remark
    from student
    order by id asc
  </select>
  <select id="selectByStudentNo" parameterType="String" resultMap="BaseResultMap">
	  select id, student_no, name, sex, remark
	    from student where 1=1
	    <if test="student_no != null and student_no !='' ">
	    	and student_no = #{studentNo}
	    </if>
  </select>
  
  <select id="selectByIdNameMap" resultMap="BaseResultMap">
  	   select id, student_no,name,sex,remark from student
  	   <where>
  	   		<if test="student_no != null and student_no !=''">
  	   			student_no = #{studentNo}
  	   		</if>
  	   		<if test="name !=null and name !=''">
  	   			name = #{name}
  	   		</if>
  	   </where>
  </select>
  
  <select id="selectByStudentNoBk" parameterType="String" resultMap="BaseResultMap">
	  select id, student_no, name, sex, remark
	    from student where 1=1
	    <choose>
	    	<when test="student_no != null and student_no !=''">
	    	    and student_no = #{studentNo}
	    	</when>
	    	<when test="name != null and name !=''">
	    		and name = #{name}
	    	</when>
	    	<otherwise>
	    		and student_no = '1'
	    	</otherwise>
	    </choose>
  </select>
  
   <select id="selectByStudentNoBkt" parameterType="String" resultMap="BaseResultMap">
	  select id, student_no, name, sex, remark
	    from student
	  	<where>
	  		<if test="student_no != null and student_no !='' ">
	    	 student_no = #{studentNo}
	    </if>
	  	</where>
  </select>
  
    <select id="selectByStudentNoBkf" parameterType="String" resultMap="BaseResultMap">
	  select id, student_no, name, sex, remark
	    from student
	  <trim prefix="where" prefixOverrides="and">
	  	<if test="student_no != null and student_no !=''">
	  		and student_no = #{studentNo}
	  	</if>
	  </trim>
  </select>
  
  <update id="setTest">
  	 update student
  	  <set>
  	  	<if test="student_no != null and student_no !=''">
	  		student_no = #{studentNo},
	  	</if>
	  	<if test="name != null and name !=''">
	  		name = #{name}
	  	</if>
  	  </set>
  	  where id = #{id}
  </update>
  
  <select id="foreachtest" resultMap="BaseResultMap">
  	select * from student where student_no in 
  		<foreach collection="stuNoList" item="current" index="index" open="(" separator="," close=")">
  			#{current}
  		</foreach>
  </select>
  
  <select id="bindTest" parameterType="String" resultMap="BaseResultMap">
  	<bind name="stno" value="'%'+_parameter+'%'"/>
  	 select id, student_no, name, sex, remark
	    from student
	    where student_no like #{stno}
  </select>
  <!-- <select id="selectTest" useCache="true" flushCache="false"></select>
  <insert id="insertTest" flushCache="true"></insert>
  <update id="updateTest" flushCache="true"></update>
  <delete id="deleteTest" flushCache="true"></delete> -->
  
  <!-- 存储过程调用 -->
  <select id="count" parameterType="com.avalon.ms.dao.entity.StudentProcedureBean" statementType="CALLABLE" resultType="com.avalon.ms.dao.entity.StudentProcedureBean">
  	{
  		call procedure_student(
  		#{name,mode=IN,jdbcType=VARCHAR},
  		#{count,mode=OUT,jdbcType=VARCHAR},
  		#{date,mode=OUT,jdbcType=DATE}
  		)
  	}
  </select>
</mapper>